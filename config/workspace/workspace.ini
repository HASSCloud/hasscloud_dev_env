###
# app configuration
# https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[app:main]
use = egg:workspace

pyramid.includes =
    pyramid_multiauth
    pyramid_chameleon
    pyramid_cors
    pyramid_openapi

# multiauth.policies = bearer session
multiauth.policies = bearer
multiauth.policy.bearer.use = pyramid_oidc.authentication.OIDCBearerAuthenticationPolicy
#multiauth.policy.bearer.callback =
multiauth.authorization_policy = pyramid.authorization.ACLAuthorizationPolicy
multiauth.groupfinder = pyramid_oidc.authentication.keycloak.keycloak_callback

#cors.Access-Control-Allow-Credentials = true
cors.Access-Control-Allow-Headers = Accept,Accept-Language,Content-Language,Content-Type,Authorization

openapi.spec = workspace:openapi.yaml

# gunicorn wants this server section
[server:main]
use = egg:gunicorn#main
host = 0.0.0.0
port = 6543
workers = 2
threads = 2

timeout = 30
graceful_timeout = 30
keepalive = 2
limit_request_line = 4096
limit_request_fields = 100
limit_request_field_size = 8190
preload_app = True
user = nobody
group = nogroup

accesslog = -
errorlog = -
loglevel = debug
# logconfig = <file>

statsd_host = statsd:9125
statsd_prefix = workspace


worker_class = sync
# # pip install gunicorn[eventlet]
# worker_class = eventlet

###
# logging configuration
# https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, workspace

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_workspace]
level = INFO
handlers =
qualname = workspace

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)s][%(threadName)s] %(message)s

